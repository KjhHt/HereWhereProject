<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cos.security1.service.MybatisMapper">

	<select id="findbyUserPassword" resultType="String" parameterType="java.util.Map">
		SELECT pwd FROM member WHERE id= #{id}
	</select>
	
	<select id="getInfo" resultType="Map" parameterType="String">
		SELECT authority,provider FROM member WHERE id=#{id}
	</select>
	
	<select id="isPreviousUser" resultType="int" parameterType="String">
		SELECT count(*) FROM member WHERE id=#{id}
	</select>
	
	<select id="findByUsername" resultType="UserDto" parameterType="String">
		SELECT id,pwd,authority FROM member WHERE id = #{id}
	</select>
	
	<select id="findByMemberInfo" resultType="UserDto" parameterType="String">
		SELECT m.id,m.name,m.profileimage,mi.mbti,mi.phonenumber,mi.lat,mi.lng
		FROM member m JOIN  member_info mi
		ON m.id = mi.id
		WHERE m.id = #{id}
	</select>
	
	<insert id="joinSocialMember" parameterType="UserDto">
		INSERT INTO member VALUES(#{id},#{pwd},#{name},#{authority},#{provider},SYSDATE,#{profileimage},NULL)
	</insert>


	<insert id="joinMember" parameterType="UserDto">
		INSERT INTO member VALUES(#{id},#{pwd},#{name},#{authority},#{provider},SYSDATE,#{profileimage},NULL)
	</insert>
	
	<insert id="joinMemberInfo" parameterType="UserDto">
		INSERT INTO member_info VALUES(SEQ_MEMBER_INFO_TABLE.NEXTVAL,#{mbti},#{tel},#{gender},#{address},#{lat},#{lng},#{id})
	</insert>
	
	<insert id="profileImageTable" parameterType="UserDto">
		INSERT INTO profileimage_table VALUES(SEQ_PROFILEIMAGE_TABLE.NEXTVAL,#{filename},#{filesize},#{fileroute},#{id})
	</insert>
	
	<update id="updateRecentLoginTime" parameterType="String">
		UPDATE member SET recentlogintime=sysdate WHERE id=#{id}
	</update>
	
	<select id="boardList" parameterType="String" resultType="BoardDto">
		SELECT bt.*, 
		       (SELECT COUNT(*) 
		        FROM board_comment bc 
		        WHERE bt.board_no = bc.board_no) as comment_count ,
		       (SELECT COUNT(*) 
		        FROM like_table lt
		        WHERE bt.board_no = lt.board_no) as like_count
		FROM (
		        SELECT b.*, m.profileimage 
		        FROM board_table b JOIN member m ON b.id = m.id
		        WHERE b.id = m.id
                <!-- 태그 검색 쿼리 -->
              	AND (#{keyword} IS NULL OR b.board_tags LIKE '%' || #{keyword} || '%')
		        ORDER BY b.board_createtime DESC
		        OFFSET ${num} ROWS 
		        FETCH NEXT 8 ROWS ONLY
	     	) bt
	</select>
	
	<select id="getSensitive" parameterType="String" resultType="CommentDto">
	    SELECT * FROM board_comment WHERE board_no = #{board_no}
	</select>
	
	<select id="myBoard" parameterType="String" resultType="BoardDto">
		select bt.* , (SELECT COUNT(*) FROM like_table lt WHERE bt.board_no = lt.board_no) as like_count , m.profileimage
		from board_table bt JOIN member m ON bt.id = m.id
		where bt.id = #{id}
		order by board_createtime desc
	</select>
	
	<select id="getLocationData" parameterType="String" resultType="LocationDto">
		SELECT * FROM board_location WHERE board_no = #{board_no}
	</select>
	
	<select id="getLikeList" parameterType="String" resultType="LikeDto">
	    SELECT l.*,m.profileimage,m.name
	    FROM like_table l 
	    JOIN member m 
	    ON l.like_id = m.id
	    WHERE board_no = #{board_no}
	</select>
	
	<insert id="boardInsert" parameterType="BoardDto">
		INSERT INTO board_table VALUES(SEQ_BOARD_TABLE.NEXTVAL,#{board_content},sysdate,null,#{board_imageFileName},#{board_writer},#{id},#{board_tags},#{board_title})
	</insert>
	<select id="findBoardNo" parameterType="String" resultType="BoardDto">
		SELECT board_no,board_createtime FROM board_table WHERE board_imagefilename = #{fileName}
	</select>
	<insert id="boardImageInsert" parameterType="BoardDto">
		INSERT INTO boardimage_table VALUES(SEQ_BOARDIMAGE_TABLE.NEXTVAL,#{boardImage_FileName},#{boardImage_Size},#{boardImage_Route},#{board_no})
	</insert>
	
	<select id="commentList" parameterType="String" resultType="CommentDto">
		SELECT 
		    bc.*, 
		    mb.profileimage, 
		    NVL(cl.like_count, 0) AS like_count,
		    CASE WHEN cu.commentLike_id IS NULL THEN 'F' ELSE 'T' END AS user_liked
		FROM 
		    board_comment bc 
		JOIN 
		    member mb ON bc.id = mb.id
		LEFT JOIN 
		    (
		        SELECT 
		            comment_no, 
		            COUNT(*) as like_count 
		        FROM 
		            commentLike_table 
		        GROUP BY 
		            comment_no
		    ) cl ON bc.comment_no = cl.comment_no
		LEFT JOIN 
		    commentLike_table cu ON bc.comment_no = cu.comment_no AND cu.commentLike_id = #{id}
		WHERE 
		    bc.board_no = #{board_no}
		ORDER BY 
		    bc.comment_createtime
	</select>
	<insert id="addCommentLike" parameterType="String">
		INSERT INTO commentLike_table VALUES(SEQ_COMMENTLIKE_TABLE.nextval,#{id},sysdate,#{comment_no})
	</insert>
	<delete id="deleteCommentLike" parameterType="String">
		DELETE commentLike_table WHERE commentlike_id=#{id} AND comment_no=#{comment_no}
	</delete>
	
	
	<insert id="commentInsert" parameterType="CommentDto">
		INSERT INTO board_comment VALUES(SEQ_BOARD_COMMENT.NEXTVAL,#{comment_writer},#{comment_content},sysdate,#{board_no},#{id},#{comment_result},#{comment_probability},#{comment_sentiment})
	</insert>

	<select id="islike" parameterType="String" resultType="int">
		SELECT count(*) FROM like_table WHERE like_id = #{id} AND board_no = #{board_no}
	</select>
	<insert id="insertLike" parameterType="String">
		INSERT INTO like_table VALUES(SEQ_LIKE.NEXTVAL,#{id},sysdate,#{board_no})
	</insert>
	<delete id="deleteLike" parameterType="String">
		DELETE like_table WHERE like_id = #{id} AND board_no = #{board_no}
	</delete>
	
	<select id="pushFindToken" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM push_table WHERE id = #{id}
	</select>
	<insert id="pushInsert" parameterType="String">
		INSERT INTO push_table VALUES(#{id},#{token})
	</insert>
	<update id="pushUpdate" parameterType="String">
		UPDATE push_table SET push_token = #{token} WHERE id = #{id}
	</update>

	<select id="findTokenByUserId" resultType="String">
	    SELECT push_token FROM push_table WHERE id = #{id}
	</select>
	
	<delete id="deletePushToken" parameterType="String">
		DELETE push_table WHERE id = #{id}
	</delete>
	
	<select id="checkFollowRequest" resultType="int" parameterType="FollowDto">
		SELECT COUNT(*) AS request_count 
		FROM follow_table
		WHERE (follow_senderid = #{follow_senderid} AND follow_recipientid = #{follow_recipientid})
	       OR (follow_senderid = #{follow_recipientid} AND follow_recipientid = #{follow_senderid})
	</select>
	
	<insert id="insertFollow" parameterType="FollowDto">
		INSERT INTO follow_table VALUES(seq_follow.nextval,#{follow_senderid},#{follow_recipientid},sysdate,'F',NULL,#{notice_no})
	</insert>
	
	<select id="getNoticeNo" parameterType="FollowDto">
		SELECT notice_no
		FROM notice_table
		WHERE id = #{follow_recipientid}
        order by notice_createtime desc
        fetch first 1 row only
	</select>
	
	<select id="getFollowList" parameterType="String" resultType="FollowDto">
		SELECT m.id,m.name, m.profileimage
		FROM follow_table f
		JOIN member m ON m.id = 
		    CASE
		        WHEN f.follow_senderid = #{id} THEN f.follow_recipientid
		        WHEN f.follow_recipientid = #{id} THEN f.follow_senderid
		    END
		WHERE (f.follow_senderid = #{id} OR f.follow_recipientid = #{id}) 
		AND f.follow_is = 'Y'
	</select>
	
	<select id="getMyFollowList" parameterType="String" resultType="FollowDto">
		SELECT m.id,m.profileimage,m.name
		FROM follow_table f
		JOIN member m ON m.id = 
		    CASE
		        WHEN f.follow_senderid = #{id} THEN f.follow_recipientid
		        WHEN f.follow_recipientid = #{id} THEN f.follow_senderid
		    END
		WHERE (f.follow_senderid = #{id} OR f.follow_recipientid = #{id})
	</select>
	
	<select id="getIsFollowList" parameterType="String" resultType="FollowDto">
		SELECT m.id,f.follow_is
		FROM follow_table f
		JOIN member m ON m.id = 
		    CASE
		        WHEN f.follow_senderid = #{id} THEN f.follow_recipientid
		        WHEN f.follow_recipientid = #{id} THEN f.follow_senderid
		    END
		WHERE (f.follow_senderid = #{id} OR f.follow_recipientid = #{id})
	</select>
	
	
	
	<select id="findById" resultType="int" parameterType="String">
		SELECT count(*) FROM member WHERE id = #{id}
	</select>
	
	<select id="getDmNo" resultType="ChatDto" parameterType="String">
		SELECT *
		FROM dm_table
		WHERE (DM_SENDER_ID = #{rid} AND DM_RECIPIENT_ID = #{id})
	    OR (DM_SENDER_ID = #{id} AND DM_RECIPIENT_ID = #{rid})
	</select>
	
	<select id="chatList" resultType="ChatDto" parameterType="String">
		SELECT ms.* 
		FROM dm_table dm JOIN dm_message ms 
		ON dm.dm_no = ms.dm_no
		WHERE dm.dm_no = #{dm_no}
		ORDER BY dm_sendtime
	</select>

	<insert id="insertChatRoom" parameterType="String">
		INSERT INTO dm_table VALUES(SEQ_DM.nextval,#{id},#{rid},'0')
	</insert>
	<select id="getSeqDmNo" resultType="string">
    	SELECT SEQ_DM.nextval FROM dual
	</select>
	<insert id="insertMessage" parameterType="ChatDto">
		INSERT INTO dm_message VALUES(#{dm_no},#{dm_sender_id},#{dm_content},sysdate)
	</insert>
	<insert id="insertNotice" parameterType="NoticeDto">
		INSERT INTO notice_table VALUES(SEQ_NOTICE_TABLE.nextval,#{notice_content},sysdate,#{id})
	</insert>
	
	<select id="noticeList" parameterType="String" resultType="NoticeDto">
		SELECT notice_table.*, follow_table.follow_senderid,m.profileimage
		FROM notice_table 
		INNER JOIN follow_table 
		ON notice_table.notice_no = follow_table.notice_no
        JOIN member m
        ON follow_table.follow_senderid = m.id
		WHERE notice_table.id = #{id}
	</select>

	<update id="successFollow" parameterType="String">
		UPDATE follow_table SET follow_is = 'Y',follow_responsetime=sysdate WHERE notice_no = #{notice_no}
	</update>
	<delete id="FailFollow" parameterType="String">
		DELETE follow_table WHERE notice_no = #{notice_no}
	</delete>
	<delete id="deleteNotice" parameterType="String">
		DELETE notice_table WHERE notice_no = #{notice_no}
	</delete>

	<insert id="insertBoardLocation" parameterType="LocationDto">
		INSERT INTO board_location VALUES(SEQ_BOARD_LOCATION.nextval,#{location_name},#{location_address},#{location_imageurl},#{location_rating},#{location_placeid},#{board_no},#{location_iatacode})
	</insert>
	
	<!-- 예약 -->
	<insert id="insertReservation" parameterType="ReservationDto">
		INSERT INTO reservation_table VALUES(SEQ_RESERVATION_TABLE.nextval,#{reservation_lat},#{reservation_lng},#{reservation_pricename},#{reservation_price},sysdate,#{reservation_receipturl},#{id})
	</insert>
	<insert id="insertFlightReservation" parameterType="ReservationDto">
		INSERT INTO flightreservation_table VALUES
			(SEQ_FLIGHTRESERVATION_TABLE.nextval,
				#{flight_productname},
				#{flight_depcode},
				#{flight_arrivalairportcode},
				#{flight_departuredate},
				#{flight_duration},
				#{flight_seattype},
				#{flight_seatnumber},
				#{flight_price},
				sysdate,
				#{flight_receipt},
				#{id})
	</insert>
	
	<select id="findReservationsByUserId" resultType="ReservationDto" parameterType="String">
    	SELECT * FROM reservation_table WHERE id = #{id}
	</select>
	
	<select id="findFlightReservationsByUserId" resultType="ReservationDto" parameterType="String">
    	SELECT * FROM flightreservation_table WHERE id = #{id}
	</select>
	
	<select id="getMypageHeader" resultType="UserDto" parameterType="String">
	    SELECT name, profileimage,
	    (
	        SELECT COUNT(*)
	        FROM board_table
	        WHERE id = #{id}
	    ) AS boardcount,
	    (
	        SELECT COUNT(*)
	        FROM follow_table
	        WHERE (follow_senderid = #{id} OR follow_recipientid = #{id})
	        AND follow_is = 'Y'
	    ) AS followcount
	    FROM MEMBER
	    WHERE id = #{id}
	</select>
	
	<!-- 일정 -->
	<insert id="insertSchedule" parameterType="ScheduleDto">
		INSERT INTO schedule_table VALUES(SEQ_SCHEDULE_TABLE.nextval,#{schedule_title},#{schedule_startdate},#{schedule_enddate},#{id})
	</insert>
	
	<insert id="insertPlan" parameterType="PlanDto">
		INSERT INTO plan_table VALUES(SEQ_PLAN_TABLE.nextval,#{plan_name},#{plan_img},#{plan_placeid},sysdate,#{schedule_no})
	</insert>
	
	<select id="getSchedules" parameterType="String" resultType="ScheduleDto">
		SELECT * FROM schedule_table WHERE id=#{id}
	</select>
	
	<select id="getPlans" parameterType="Long" resultType="PlanDto">
		SELECT * FROM plan_table WHERE schedule_no=#{schedule_no}
	</select>
	
	<select id="getScheduleByNo" parameterType="Long" resultType="ScheduleDto">
		SELECT * FROM schedule_table WHERE schedule_no=#{schedule_no}
	</select>	
	
</mapper>